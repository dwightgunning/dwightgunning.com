---
import type { InferGetStaticPropsType } from 'astro';

import StandardLayout from '@layouts/Standard.astro';
import ActivitySummaryCard from '@components/pages/outdoors/ActivitySummaryCard.astro';
import getOutdoorPagesCollection from 'src/lib/getOutdoorPagesCollection';

export async function getStaticPaths() {
  const allOutdoorsPages = await getOutdoorPagesCollection();
  const uniqueTags: string[] = [...new Set(allOutdoorsPages.map((outdoorsPage) => outdoorsPage.data.tags).flat())];
  return uniqueTags.map((tag: string) => {
    const filteredOutdoorsPages = allOutdoorsPages.filter((outdoorsPage) => outdoorsPage.data.tags.includes(tag));
    return {
      params: { tag },
      props: { outdoorsPages: filteredOutdoorsPages },
    };
  });
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params;
const { outdoorsPages } = Astro.props;
---

<StandardLayout
  windowTitle={`Tag: ${tag} - Outdoor maps, GPX tracks and photos`}
  metaTitle={`Outdoor activities tag: ${tag}`}
  metaDescription={`Outdoor activities tagged with '${tag}'. Helpful descriptions, maps and GPX tracks from my hiking, running, riding and camping adventures.`}
  pageHeading={`Tag: ${tag}`}
  showFooterNav={true}
  canonicalHref={`${import.meta.env.SITE}/outdoors/`}
>
  <p class="text-lg">Outdoor activities tagged with '<span class="text-accent">{tag}</span>'.</p>
  {outdoorsPages.map((outdoorsPage) => <ActivitySummaryCard outdoorsPage={outdoorsPage} />)}
  <p>See all the <a href="/outdoors/tags/">tags</a>.</p>
  
</StandardLayout>
